name: Release and Deploy Application

on:
  workflow_call: {}

jobs:
  release-and-deploy:
    name: Build and Push Docker image to registry
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    permissions:
      contents: write
      packages: write

    steps:
      - name: Clone the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Containerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        run: |
          semver_regex="^v?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?(\+([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?$"
          if [[ ! $TAG =~ $semver_regex ]]; then
            echo "The Tag $TAG is not a semantic version" 1>&2
            exit 1
          fi

          prerelease=false
          regex="^v?[0-9]+\.[0-9]+\.[0-9]+-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)"
          if [[ $TAG =~ $regex ]]; then
            prerelease=true
          fi

          echo "TAG=$TAG"
          echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
          echo "Repository for Title=${GITHUB_REPOSITORY#*/}"
          echo "prerelease=$prerelease"

          if [ "$prerelease" = true ]; then
            echo "Creating prerelease $TAG"
            gh release create "$TAG" \
              --repo="$GITHUB_REPOSITORY" \
              --title="$TAG" \
              --prerelease \
              --generate-notes
          else
            echo "Creating release $TAG"
            gh release create "$TAG" \
              --repo="$GITHUB_REPOSITORY" \
              --title="$TAG" \
              --generate-notes
          fi